/****************** FUNCTION DESCRIPTION ********************USAGE		// create qc	q_makeCond(&qc,qc0,qc0->nLevels,qc0->grain,qc0->guess,qc0->nInitial);	// use it for a while		// get rid of it	q_freeCond(&qc);ARGUMENTS	qc - Condition pointer.		 SUMMARY	This frees a condition allocated by q_makeCond.COMMENTS	Note that the read-only tables pInitial and pResponse are not freed,	because they don't really belong to qc. Those pointers were 	copied from qc0. The use of free() assumes that the space was 	allocated by malloc() or calloc(), which is presently true: q_makeCond() calls	q_erralloc() which calls calloc().HISTORY	12/6/87	DGP: written	8/21/89 DGP: replaced cfree by ANSI C calls memset and free.	12/15/91 dgp: free new arrays: H, pSum, and likelihood.9/1/94 dgp Discovered and fixed bug. I was freeing too many response arrays.	Fixed by replacing RESPONSES by (*qcPtr)->nResponses.*************************************************************/#include <stdio.h>#include <stdlib.h>#include <string.h>#include "q_include.h"void q_freeCond(QCondition **qcPtr){	int r;		if (*qcPtr==NULL) return;	/* leave pInitial */	free((*qcPtr)->p);	/* leave pResponse[] */	free((*qcPtr)->H);	free((*qcPtr)->likelihood);	free((*qcPtr)->pSum);	for (r=0; r<(*qcPtr)->nResponses; r++) free((*qcPtr)->responses[r]);	free((*qcPtr)->trials);	memset(*qcPtr,0,sizeof(**qcPtr));		/* zero out the condition */	free(*qcPtr);	*qcPtr=NULL;}