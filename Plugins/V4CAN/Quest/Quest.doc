/*Quest.docOctober 9, 1996This Quest package is historically descended from the algorithm that Beau and Ipublished some years ago. Watson, A. B. and Pelli, D. G. (1979) The QUEST staircase procedure. Applied Vision Association Newsletter, 14, 6-7. (This is basically a long abstract.)Watson, A. B. and Pelli, D. G. (1983) QUEST: a Bayesian adaptive psychometric method. Percept Psychophys, 33 (2), 113-20.I would also encourage looking at Ewen's recent paper, which points out some elegant refinements that the QUEST package now supports.King-Smith, P. E., Grigsby, S. S., Vingrys, A. J., Benes, S. C., and Supowit, A. (1994) Efficient and unbiased modifications of the QUEST threshold method: theory, simulations, experimental evaluation and practical implementation. Vision Res, 34 (7), 885-912.Some C code was written in 1985 by A. "Beau" Watson and K. Baldwin, and revised and expanded in 1986 by Andrew Fitzhugh, under Beau's supervision. When Ivisited NASA for a sabbatical in 1987 I supervised a complete rewrite by EJ Chichilniski (now a well-known visual scientist) and ÒPhilÓ Felasfa Wodajo. I've also enhanced thecode to do quantiles, which i've shown in an unpublished manuscript to be a moreefficient algorithm than modes. However, the code is agnostic; it allows you to do a trial at any intensity whatsoever, will appropriately update the posterior pdf(probability density function) and compute its mode, quantile, or mean. I've used the code continuously since then for all my psychophysics. I've fixed all known bugs, over theyears have code to a variety of tests for accuracy, etc. It's been a LONG time since any bugs have appeared so for most practical purposes you may assume it's bug free.I have given copies of this code privately to many colleagues over the years, buthaven't published it, because we've never written a manual for it. It would appearthat we may never get around to writing a manual, but so many people seem to find it useful even without a manual, and so many others keep requesting a copy of thecode that it seems best to simply make the code publicly available, as is.I would be very grateful to hear of any bugs that you can document, but I am not offeringprogramming help beyond what's already here. I will keep the publicly available copy up-to-date, including any future bug fixs (though I expect them to be rare). I'll senda notice to the VideoToolbox mailing list when I post updates. So you may want to haveyour name added to that list. Just let me know: denis@psych.nyu.eduThe rest of this note is based on correspondence with David Brainard. It supplementsQuestExample.c in explaining how to use Quest. Obviously, this falls far shortof what one might call a manual, but in the meantime, ...QuestExample.c illustrates the use of the Quest package. All the hard work is done by the myriad low-level routines whose names begin with "q_...",but the user of the package can ignore them, and just use the high-level "Quest..." routines,which are in three files: Quest.c, QuestOpen.c, and QuestClose.c.You define threshold by choosing a threshold criterion p, i.e. aproportion correct. Call q_findIntensity() to set the parameter epsilon so thatthe psychometric function will have value p when intensity is 0. SeeQuestExample.cQuest considers threshold to be on an "intensity" scale, about which it makes noassumptions. You supply the assumptions, primarily the psychometric function andthe prior pdf. It uses the results of each trial to compute likelihood (via thepsychometric function) and update the pdf, i.e. compute the posterior pdf. Inmost applications "intensity" will represent log10 contrast.All of Quest's allocations are done at the beginning, when you call QuestOpen.Quest will only consider intensities that fall within its range, which is ainterval of q->nlevels*q->grain, centered on q->guess. All of these parametersare fixed throughout the whole run. Quest implicitly assumes that intensities(log contrasts) outside of this range are impossible. Memory is cheap, so use awide range (e.g. 10). A good value for grain would be 0.01, for a precision ofone-hundreth of a log unit in the internal quantization of contrast. TheinitialSD parameter represents the nominal standard deviation of the gaussianprior pdf (in logC), centered around the initial threshold estimate (q->guess).However, the actual sd may be less, because the computed pdf is clipped at theends of the range (q->grain*q->nlevels). You may call QuestSd at any time toobtain the current standard deviation of the posterior pdf.What is a reasonable value for QuestSD after 50 trials? About 0.05, as I recall.All my attempts to compare actual statistics, across simulations, withparameters of the posterior pdf came out in agreement, but I wasn't verythorough. For a simulated observer the sd of repeated threshold estimates oughtto agree with QuestSD.Even if you allow more than two kinds of response (e.g. letter identification)you will normally want to score the response as right or wrong and supply onlythat 0 or 1 response to QuestUpdate. Quest is sufficiently general to allow forpsychometric functions describing more than two possible responses (e.g. howmany spots did you see?), but in most applications there won't be anytheoretical psychometric function describing the possibilities of multipleresponse kinds.Sometimes your program or equipment may be unable to produce the intensity thatQuest suggests, because of coarse quantizations (e.g. steps in an attenuator orDAC) and range limitations. That's ok. Quest recommends a test intensity based strictly on statistical considerations. You run the trial taking into account variouspractical considerations (of both subject and display). Then you supply to Questthe data, namely the actual test intensity and the result at that intensity.HISTORY:8/30/94 dgp wrote it, based on correspondence with David Brainard8/31/94 dgp minor editing10/9/96 dgp expanded introduction for public release*/