/****************** FUNCTION DESCRIPTION ********************USAGE	q_response(qc, &function, a1, a2, a3, a4);ARGUMENTS	QCondition	*qc				ptr to a condition	double		(*function)()	response function	double		a1				response fcn parameter	double		a2				response fcn parameter	double		a3				response fcn parameter	double		a4				response fcn parameterSUMMARY	Creates (if necessary) and fills the pResponse[r] arrays, using the	supplied function and parameters. The supplied function will	be called repeatedly for each possible response and intensity,	passing the other four arguments	a1...a4, as well. It should return a probability.		The array created has nnLevels elements. 	The probability p of reponse r at intensity "intensity" is		p = qc->pResponse[r][ vtoii(qc,intensity-actual+guess) ]		where actual is the true threshold and guess is the guess.	RETURN VALUE	None.EXAMPLE	q_response(qc, &q_Weibull, beta, gamma, delta, epsilon);ERROR HANDLING & BOUNDARY CONDITIONS	Exits if insufficient memory.COMMENTS	The pResponse[r] table is about twice as long as the number of levels so	that it can be used to update the likelihood table p.		See q_Weibull for explanation of the parameters alpha, beta, gamma, delta,	epsilon.	REVISION HISTORY	9/86		Version 1,	A. B. Watson and K. Baldwin	10/16/86	Version 2,	A. Fitzhugh	11/6/87		FW: use double vars everywhere	11/9/87		FW: receive pointer to psych fcn to check if 				memory needs to be allocated 	11/16/87	FW: do not return a pointer; change name of fcn; 				call maketables(); 	12/4/87		FW: do not use success and failure fcns, do not 				call q_make_tables(); 	12/6/87		DGP: removed Weibull function, so that it 				can be called separately.  	12/15/87	DGP: made it accept any response function 				as an argument. 	8/30/91		dgp: modified it to maintain old behavior using new 				pResponse tables.	9/2/91		dgp: renamed p_response.c, extensively revised,				now accepts a PResponseFunction instead of				a PsychometricFunction. The difference is that				the PResponseFunction accepts an extra argument				indicating which response we want to know the				probability of.	10/24/92	dgp: Fixed computation of intensity so that it gives sensible answer				even when qc->guess is NAN. Previously the computation 				added and then subtracted the guess, which didn't cancel				out when the guess was NAN.*********************************************************/#include <stdio.h>#include "q_include.h"void q_response(QCondition *qc	,PResponseFunction function,double a1,double a2,double a3,double a4){	int ii,r;	double intensity;	int nnLevels=qc->nnLevels;		for (r=0; r<qc->nResponses; r++) if (qc->pResponse[r]==NULL)		qc->pResponse[r]=(double *) q_erralloc("q_response",sizeof(double)*nnLevels);	intensity=iitol(qc,0)*qc->grain;	for (ii=0; ii<nnLevels; ii++) {		for (r=0; r<qc->nResponses; r++)			qc->pResponse[r][ii]=(*function)(r,intensity,a1,a2,a3,a4);		intensity+=qc->grain;	}}